# Stubs for docutils.writers.manpage (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from docutils import nodes, writers
from typing import Any, Optional

__docformat__: str
FIELD_LIST_INDENT: int
DEFINITION_LIST_INDENT: int
OPTION_LIST_INDENT: int
BLOCKQOUTE_INDENT: float
LITERAL_BLOCK_INDENT: float
MACRO_DEF: str

class Writer(writers.Writer):
    supported: Any = ...
    output: Any = ...
    translator_class: Any = ...
    def __init__(self) -> None: ...
    def translate(self): ...

class Table:
    def __init__(self) -> None: ...
    def new_row(self): ...
    def append_separator(self, separator): ...
    def append_cell(self, cell_lines): ...
    def as_list(self): ...

class Translator(nodes.NodeVisitor):
    words_and_spaces: Any = ...
    possibly_a_roff_command: Any = ...
    document_start: str = ...
    settings: Any = ...
    language: Any = ...
    head: Any = ...
    body: Any = ...
    foot: Any = ...
    section_level: int = ...
    context: Any = ...
    topic_class: str = ...
    colspecs: Any = ...
    compact_p: int = ...
    compact_simple: Any = ...
    header_written: int = ...
    authors: Any = ...
    defs: Any = ...
    def __init__(self, document) -> None: ...
    def comment_begin(self, text): ...
    def comment(self, text): ...
    def ensure_eol(self): ...
    def astext(self): ...
    def deunicode(self, text): ...
    def visit_Text(self, node): ...
    def depart_Text(self, node): ...
    def list_start(self, node): ...
    def list_end(self): ...
    def header(self): ...
    def append_header(self): ...
    def visit_address(self, node): ...
    def depart_address(self, node): ...
    def visit_admonition(self, node, name: Optional[Any] = ...): ...
    def depart_admonition(self, node): ...
    def visit_attention(self, node): ...
    depart_attention: Any = ...
    def visit_docinfo_item(self, node, name): ...
    def depart_docinfo_item(self, node): ...
    def visit_author(self, node): ...
    depart_author: Any = ...
    def visit_authors(self, node): ...
    def depart_authors(self, node): ...
    def visit_block_quote(self, node): ...
    def depart_block_quote(self, node): ...
    def visit_bullet_list(self, node): ...
    def depart_bullet_list(self, node): ...
    def visit_caption(self, node): ...
    def depart_caption(self, node): ...
    def visit_caution(self, node): ...
    depart_caution: Any = ...
    def visit_citation(self, node): ...
    def depart_citation(self, node): ...
    def visit_citation_reference(self, node): ...
    def visit_classifier(self, node): ...
    def depart_classifier(self, node): ...
    def visit_colspec(self, node): ...
    def depart_colspec(self, node): ...
    def write_colspecs(self): ...
    def visit_comment(self, node, sub: Any = ...): ...
    def visit_contact(self, node): ...
    depart_contact: Any = ...
    def visit_container(self, node): ...
    def depart_container(self, node): ...
    def visit_compound(self, node): ...
    def depart_compound(self, node): ...
    def visit_copyright(self, node): ...
    def visit_danger(self, node): ...
    depart_danger: Any = ...
    def visit_date(self, node): ...
    def visit_decoration(self, node): ...
    def depart_decoration(self, node): ...
    def visit_definition(self, node): ...
    def depart_definition(self, node): ...
    def visit_definition_list(self, node): ...
    def depart_definition_list(self, node): ...
    def visit_definition_list_item(self, node): ...
    def depart_definition_list_item(self, node): ...
    def visit_description(self, node): ...
    def depart_description(self, node): ...
    def visit_docinfo(self, node): ...
    def depart_docinfo(self, node): ...
    def visit_doctest_block(self, node): ...
    def depart_doctest_block(self, node): ...
    def visit_document(self, node): ...
    def depart_document(self, node): ...
    def visit_emphasis(self, node): ...
    def depart_emphasis(self, node): ...
    def visit_entry(self, node): ...
    def depart_entry(self, node): ...
    def visit_enumerated_list(self, node): ...
    def depart_enumerated_list(self, node): ...
    def visit_error(self, node): ...
    depart_error: Any = ...
    def visit_field(self, node): ...
    def depart_field(self, node): ...
    def visit_field_body(self, node): ...
    def depart_field_body(self, node): ...
    def visit_field_list(self, node): ...
    def depart_field_list(self, node): ...
    def visit_field_name(self, node): ...
    def depart_field_name(self, node): ...
    def visit_figure(self, node): ...
    def depart_figure(self, node): ...
    def visit_footer(self, node): ...
    def depart_footer(self, node): ...
    def visit_footnote(self, node): ...
    def depart_footnote(self, node): ...
    def footnote_backrefs(self, node): ...
    def visit_footnote_reference(self, node): ...
    def depart_footnote_reference(self, node): ...
    def visit_generated(self, node): ...
    def depart_generated(self, node): ...
    def visit_header(self, node): ...
    def depart_header(self, node): ...
    def visit_hint(self, node): ...
    depart_hint: Any = ...
    def visit_subscript(self, node): ...
    def depart_subscript(self, node): ...
    def visit_superscript(self, node): ...
    def depart_superscript(self, node): ...
    def visit_attribution(self, node): ...
    def depart_attribution(self, node): ...
    def visit_image(self, node): ...
    def visit_important(self, node): ...
    depart_important: Any = ...
    def visit_inline(self, node): ...
    def depart_inline(self, node): ...
    def visit_label(self, node): ...
    def depart_label(self, node): ...
    def visit_legend(self, node): ...
    def depart_legend(self, node): ...
    def visit_line_block(self, node): ...
    def depart_line_block(self, node): ...
    def visit_line(self, node): ...
    def depart_line(self, node): ...
    def visit_list_item(self, node): ...
    def depart_list_item(self, node): ...
    def visit_literal(self, node): ...
    def depart_literal(self, node): ...
    def visit_literal_block(self, node): ...
    def depart_literal_block(self, node): ...
    def visit_math(self, node): ...
    def depart_math(self, node): ...
    def visit_math_block(self, node): ...
    def depart_math_block(self, node): ...
    def visit_meta(self, node): ...
    def depart_meta(self, node): ...
    def visit_note(self, node): ...
    depart_note: Any = ...
    def indent(self, by: float = ...): ...
    def dedent(self): ...
    def visit_option_list(self, node): ...
    def depart_option_list(self, node): ...
    def visit_option_list_item(self, node): ...
    def depart_option_list_item(self, node): ...
    def visit_option_group(self, node): ...
    def depart_option_group(self, node): ...
    def visit_option(self, node): ...
    def depart_option(self, node): ...
    def visit_option_string(self, node): ...
    def depart_option_string(self, node): ...
    def visit_option_argument(self, node): ...
    def depart_option_argument(self, node): ...
    def visit_organization(self, node): ...
    def depart_organization(self, node): ...
    def first_child(self, node): ...
    def visit_paragraph(self, node): ...
    def depart_paragraph(self, node): ...
    def visit_problematic(self, node): ...
    def depart_problematic(self, node): ...
    def visit_raw(self, node): ...
    def visit_reference(self, node): ...
    def depart_reference(self, node): ...
    def visit_revision(self, node): ...
    depart_revision: Any = ...
    def visit_row(self, node): ...
    def depart_row(self, node): ...
    def visit_section(self, node): ...
    def depart_section(self, node): ...
    def visit_status(self, node): ...
    depart_status: Any = ...
    def visit_strong(self, node): ...
    def depart_strong(self, node): ...
    def visit_substitution_definition(self, node): ...
    def visit_substitution_reference(self, node): ...
    def visit_subtitle(self, node): ...
    def depart_subtitle(self, node): ...
    def visit_system_message(self, node): ...
    def depart_system_message(self, node): ...
    def visit_table(self, node): ...
    def depart_table(self, node): ...
    def visit_target(self, node): ...
    def visit_tbody(self, node): ...
    def depart_tbody(self, node): ...
    def visit_term(self, node): ...
    def depart_term(self, node): ...
    def visit_tgroup(self, node): ...
    def depart_tgroup(self, node): ...
    def visit_thead(self, node): ...
    def depart_thead(self, node): ...
    def visit_tip(self, node): ...
    depart_tip: Any = ...
    def visit_title(self, node): ...
    def depart_title(self, node): ...
    def visit_title_reference(self, node): ...
    def depart_title_reference(self, node): ...
    def visit_topic(self, node): ...
    def depart_topic(self, node): ...
    def visit_sidebar(self, node): ...
    def depart_sidebar(self, node): ...
    def visit_rubric(self, node): ...
    def depart_rubric(self, node): ...
    def visit_transition(self, node): ...
    def depart_transition(self, node): ...
    def visit_version(self, node): ...
    def visit_warning(self, node): ...
    depart_warning: Any = ...
    def unimplemented_visit(self, node): ...
