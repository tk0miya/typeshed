# Stubs for docutils.parsers.rst.roles (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

__docformat__: str
DEFAULT_INTERPRETED_ROLE: str

def role(role_name, language_module, lineno, reporter): ...
def register_canonical_role(name, role_fn): ...
def register_local_role(name, role_fn): ...
def set_implicit_options(role_fn): ...
def register_generic_role(canonical_name, node_class): ...

class GenericRole:
    name: Any = ...
    node_class: Any = ...
    def __init__(self, role_name, node_class) -> None: ...
    def __call__(self, role, rawtext, text, lineno, inliner, options: Any = ..., content: Any = ...): ...

class CustomRole:
    name: Any = ...
    base_role: Any = ...
    options: Any = ...
    content: Any = ...
    supplied_options: Any = ...
    supplied_content: Any = ...
    def __init__(self, role_name, base_role, options: Any = ..., content: Any = ...) -> None: ...
    def __call__(self, role, rawtext, text, lineno, inliner, options: Any = ..., content: Any = ...): ...

def generic_custom_role(role, rawtext, text, lineno, inliner, options: Any = ..., content: Any = ...): ...
def pep_reference_role(role, rawtext, text, lineno, inliner, options: Any = ..., content: Any = ...): ...
def rfc_reference_role(role, rawtext, text, lineno, inliner, options: Any = ..., content: Any = ...): ...
def raw_role(role, rawtext, text, lineno, inliner, options: Any = ..., content: Any = ...): ...
def code_role(role, rawtext, text, lineno, inliner, options: Any = ..., content: Any = ...): ...
def math_role(role, rawtext, text, lineno, inliner, options: Any = ..., content: Any = ...): ...
def unimplemented_role(role, rawtext, text, lineno, inliner, attributes: Any = ...): ...
def set_classes(options): ...
