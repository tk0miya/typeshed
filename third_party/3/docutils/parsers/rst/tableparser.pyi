# Stubs for docutils.parsers.rst.tableparser (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from docutils import DataError
from typing import Any, Optional

__docformat__: str

class TableMarkupError(DataError):
    offset: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...

class TableParser:
    head_body_separator_pat: Any = ...
    double_width_pad_char: str = ...
    def parse(self, block): ...
    head_body_sep: Any = ...
    def find_head_body_sep(self): ...

class GridTableParser(TableParser):
    head_body_separator_pat: Any = ...
    block: Any = ...
    bottom: Any = ...
    right: Any = ...
    head_body_sep: Any = ...
    done: Any = ...
    cells: Any = ...
    rowseps: Any = ...
    colseps: Any = ...
    def setup(self, block): ...
    def parse_table(self): ...
    def mark_done(self, top, left, bottom, right): ...
    def check_parse_complete(self): ...
    def scan_cell(self, top, left): ...
    def scan_right(self, top, left): ...
    def scan_down(self, top, left, right): ...
    def scan_left(self, top, left, bottom, right): ...
    def scan_up(self, top, left, bottom, right): ...
    def structure_from_cells(self): ...

class SimpleTableParser(TableParser):
    head_body_separator_pat: Any = ...
    span_pat: Any = ...
    block: Any = ...
    head_body_sep: Any = ...
    columns: Any = ...
    border_end: Any = ...
    table: Any = ...
    done: Any = ...
    rowseps: Any = ...
    colseps: Any = ...
    def setup(self, block): ...
    def parse_table(self): ...
    def parse_columns(self, line, offset): ...
    def init_row(self, colspec, offset): ...
    def parse_row(self, lines, start, spanline: Optional[Any] = ...): ...
    def check_columns(self, lines, first_line, columns): ...
    def structure_from_cells(self): ...

def update_dict_of_lists(master, newdata): ...
